<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="../../../_templates/java/latex.xsl"?>
<lesson xmlns="http://www.elml.ch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.elml.ch ../../../_config/validate.xsd" 
	label="InitStruct" title="TD Variables structurées">
	
	<entry>
		<paragraph>
			Ces exercices ont pour but de vérifier que vous avez fixé les variables structurées.
		</paragraph>
		<paragraph>
      N'oubliez pas nos quelques conseils pour vous guider dans la résolution de tels problèmes :
      <list listStyle="unordered">
        <item>il convient d’abord de bien comprendre le problème posé ; assurez-vous qu’il est parfaitement spécifié ;</item>
        <item>résolvez le problème via quelques exemples précis ;</item>
        <item>mettez en évidence les variables <formatted style="bold">« données »</formatted>, les variables <formatted style="bold">« résultats »</formatted> et les variables de travail ;</item>
        <item>n’hésitez pas à faire une ébauche de résolution en français avant d’élaborer l’algorithme définitif pseudo-codé ;</item>
        <item>déclarez ensuite les variables (et leur type) qui interviennent dans chaque module ; les noms des variables risquant de ne pas être suffisamment explicites.</item>
        <item>Écrivez la partie algorithmique <formatted style="bold">AVANT</formatted> de vous lancer dans la programmation en Java.</item>
        <item>Demandez-vous si vous avez besoin de parcourir tout le tableau ou de sortir prématurément (si on a trouvé ce qu'on cherche par exemple).</item>
      </list>
    </paragraph>
      
    <paragraph title="Rectangle">
      Définir un type Rectangle pouvant décrire de façon commode un rectangle dans un espace
      à deux dimensions et dont les côtés sont parallèles aux axes des coordonnées. Écrire ensuite
      <list listStyle="unordered">
        <item>un module calculant le périmètre d’un rectangle reçu en paramètre ;</item>
        <item>un module calculant la surface d’un rectangle reçu en paramètre ;</item>
        <item>un module recevant en paramètre un rectangle R et les coordonnées d’un point P, et
          renvoyant vrai si et seulement si le point P est à l’intérieur du rectangle R ;</item>
        <item>un module recevant en paramètre un rectangle R et les coordonnées d’un point P, et
          renvoyant vrai si et seulement si le point P est sur le bord du rectangle R ;</item>
        <item>un module recevant en paramètre deux rectangles et renvoyant la valeur booléenne
          vrai si et seulement si ces deux rectangles ont une intersection.</item>
      </list>
    </paragraph>
    <paragraph>Pour plus d'exercices, 
      <link uri="../../../TDStruct/fr/html/unit_Exercices.html">révisez ici</link>
    </paragraph>
</entry>	
</lesson>
